procedure TestsDeValoresDeCartaEspañola(códigoDeTest) {
  if (códigoDeTest == 1) {
    TestValoresDeCartaEspañola()
  } elseif (códigoDeTest == 2) {
    TestEsMenorValor(palo_(Copas))
  } elseif (códigoDeTest == 3) {
    TestEsMayorValor(palo_(Espadas))
  } elseif (códigoDeTest == 4) {
    TestSiguienteYPrevio()
  } elseif (códigoDeTest == 5) {
    TestMinValorYMaxValor()
  } else {
    BOOM("Pasó todos los tests")
  }
}

procedure TestValoresDeCartaEspañola() {
  UsarLosPrimeros5Valores()
  PasarASiguientePosición()
  UsarLosSiguientes5Valores()
  Assert(0 == 0)
}

procedure UsarLosPrimeros5Valores() {
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(1), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(2), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(3), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(4), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(5), palo_(Bastos)))
}

procedure UsarLosSiguientes5Valores() {
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(6), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(7), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(10), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(11), palo_(Bastos)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(12), palo_(Bastos)))
}

procedure Assert(condiciónAVerificar) {
  PasarASiguientePosición()
  if (condiciónAVerificar) {
    Poner__Veces(Verde, 1)
  } else {
    Poner__Veces(Rojo, 1)
  }
}

procedure TestEsMenorValor(palo) {
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(1), palo))
  Assert(not(esMenorValor__(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(1))))
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(2), palo)
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(10), palo)
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(5), palo))
  Assert(not(esMenorValor__(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(5))))
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(7), palo)
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(11), palo)
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(10), palo))
  Assert(not(esMenorValor__(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(10))))
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(11), palo)
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(11), palo))
  Assert(not(esMenorValor__(valorDeCartaEspañolaDe40_(11), valorDeCartaEspañolaDe40_(11))))
  Testear2ValoresPorMenor(valorDeCartaEspañolaDe40_(11), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(12), palo))
  Assert(not(esMenorValor__(valorDeCartaEspañolaDe40_(12), valorDeCartaEspañolaDe40_(12))))
}

procedure Testear2ValoresPorMenor(valor1, valor2, palo) {
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valor2, palo))
  Assert(esMenorValor__(valor1, valor2))
  Assert(not(esMenorValor__(valor2, valor1)))
}

procedure TestEsMayorValor(palo) {
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(1), palo))
  Assert(not(esMayorValor__(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(1))))
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(2), palo)
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(10), palo)
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(5), palo))
  Assert(not(esMayorValor__(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(5))))
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(7), palo)
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(11), palo)
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(10), palo))
  Assert(not(esMayorValor__(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(10))))
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(11), palo)
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(11), palo))
  Assert(not(esMayorValor__(valorDeCartaEspañolaDe40_(11), valorDeCartaEspañolaDe40_(11))))
  Testear2ValoresPorMayor(valorDeCartaEspañolaDe40_(11), valorDeCartaEspañolaDe40_(12), palo)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorDeCartaEspañolaDe40_(12), palo))
  Assert(not(esMayorValor__(valorDeCartaEspañolaDe40_(12), valorDeCartaEspañolaDe40_(12))))
}

procedure Testear2ValoresPorMayor(valor1, valor2, palo) {
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valor2, palo))
  Assert(not(esMayorValor__(valor1, valor2)))
  Assert(esMayorValor__(valor2, valor1))
}

procedure LimpiarTablero() {
  PasarASiguientePosición()
  repeat(47) {
    SacarTodas()
    PasarASiguientePosición()
  }
  PasarASiguientePosición()
}

procedure TestSiguienteYPrevio() {
  TestSiguienteYPrevioEnMedio()
  TestSiguienteYPrevioEnCasoDeBordeInterno1()
  TestSiguienteYPrevioEnCasoDeBordeInterno2()
  TestSiguienteYPrevioEnBordeInferior()
  TestSiguienteYPrevioEnBordeSuperior()
}

procedure TestSiguienteYPrevioEnMedio() {
  HacerTestDeSiguienteYPrevio(valorDeCartaEspañolaDe40_(4), valorDeCartaEspañolaDe40_(5), valorDeCartaEspañolaDe40_(3))
}

procedure TestSiguienteYPrevioEnBordeInferior() {
  PasarASiguientePosición()
  HacerTestDeSiguienteYPrevio(valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(2), valorDeCartaEspañolaDe40_(12))
}

procedure TestSiguienteYPrevioEnBordeSuperior() {
  PasarASiguientePosición()
  HacerTestDeSiguienteYPrevio(valorDeCartaEspañolaDe40_(12), valorDeCartaEspañolaDe40_(1), valorDeCartaEspañolaDe40_(11))
}

procedure HacerTestDeSiguienteYPrevio(valor, valorSiguiente, valorPrevio) {
  PonerCarta_(dameCarta__(valor, palo_(Oros)))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorSiguiente_(valor), palo_(Oros)))
  Assert(valorSiguiente_(valor) == valorSiguiente)
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(valorPrevio_(valor), palo_(Oros)))
  Assert(valorPrevio_(valor) == valorPrevio)
}

procedure TestMinValorYMaxValor() {
  PonerCarta_(dameCarta__(minValor(), palo_(Bastos)))
  Assert(minValor() == valorDeCartaEspañolaDe40_(1))
  PasarASiguientePosición()
  PonerCarta_(dameCarta__(maxValor(), palo_(Bastos)))
  Assert(maxValor() == valorDeCartaEspañolaDe40_(12))
}

procedure TestSiguienteYPrevioEnCasoDeBordeInterno1() {
  HacerTestDeSiguienteYPrevio(valorDeCartaEspañolaDe40_(7), valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(6))
}

procedure TestSiguienteYPrevioEnCasoDeBordeInterno2() {
  HacerTestDeSiguienteYPrevio(valorDeCartaEspañolaDe40_(10), valorDeCartaEspañolaDe40_(11), valorDeCartaEspañolaDe40_(7))
}


interactive program {
  K_ARROW_RIGHT -> {
    indice := nroBolitas(Rojo) + 1
    IrAlOrigen()
    LimpiarTablero()
    TestsDeValoresDeCartaEspañola(indice)
    IrAlOrigen()
    Poner__Veces(Rojo, 1)
  }
}
