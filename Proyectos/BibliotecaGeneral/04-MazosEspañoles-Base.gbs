/*==================================================================================================*/
/*-------------------------------- REQUIERE 00-Gobstones-Base.gbs ----------------------------------*/
/*------------------- (provisto también para 03-01-PalosDeCartaEspañola-Base.gbs -------------------*/
/*------------------------- y para 03-02-ValoresDeCartaEspañola-Base.gbs) --------------------------*/
/*----------------------------------- REQUIERE 00-Listas-Base.gbs ----------------------------------*/
/*-------------------------- REQUIERE 03-01-PalosDeCartaEspañola-Base.gbs --------------------------*/
/*------------------ REQUIERE 03-02-ValoresDeCartaEspañolaDe40-Base.gbs (o de 50) ------------------*/
/*----------------------- REQUIERE 03-CartasEspañolasDe40-Base.gbs (o de 50) ------------------------*/
/*==================================================================================================*/

/*==================================================================================================*/
/*----------------------------- INTERFAZ de 04-MazosEspañoles-Base.gbs ------------------------------/
/----- Autor: Pablo E. "Fidel" Martínez López -------------------------------------------------------/
/----- EMail: fidel@unq.edu.ar                -------------------------------------------------------/
/----- Fecha creación: 2018.06                -------------------------------------------------------/
/----- Fecha última modificación: 2018.06     -------------------------------------------------------/
/----- Licencia: GNU General Public License, v2                                             ---------/
/----- Sitio Oficial de la licencia: http://www.gnu.org/licenses/old-licenses/gpl-2.0.html  --------*/
/*==================================================================================================*/

//---------------------------------------------------------------------------------------------------/
/*-------------------------------------- Definiciones de tipos --------------------------------------/
/---------------------------------------------------------------------------------------------------*/
type Mazo is record {
  // INVARIANTE DE REPRESENTACIÓN: el tamaño es siempre la longitud de la lista de cartas
      field cartas
      field tamaño
}

//---------------------------------------------------------------------------------------------------/
/*--------------------- Operaciones de creación de un mazo español (interfaz) -----------------------/
/---------------------------------------------------------------------------------------------------*/
function mazoVacío()                      { return(aux_armarMazoVacío())              }

/*@ATTRIBUTE@block_name@agregar al mazo _ la carta _ al final@*/ 
function agregarAlFinalDelMazo__(m,c)     { return(aux_agregarAlFinalDelMazo(m,c)     }
/*@ATTRIBUTE@block_name@agregar al mazo _ la carta _ al principio@*/ 
function agregarAlPrincipioDelMazo__(m,c) { return(aux_agregarAlPrincipioDelMazo(m,c) }

function juntarMazos__(m1,m2)             { return(aux_juntarMazos(m1,m2)             }
function mazoEspañol()                    { return(aux_mazoEspañolCompleto())         }
  // 

//---------------------------------------------------------------------------------------------------/
/*----------------------- Operaciones de acceso a un mazo español (interfaz) ------------------------/
/---------------------------------------------------------------------------------------------------*/
/*@ATTRIBUTE@block_name@quedan cartas en _?@*/ 
function quedanCartas_(m)              { return(aux_quedanCartas(m))            }

/*@ATTRIBUTE@block_name@cantidad de cartas del mazo _@*/ 
function cantidadDeCartasDelMazo_(m)   { return(aux_cantidadDeCartasDelMazo(m)) }

function dameLaPrimeraCartaDe_(mazo)   { return(aux_dameLaPrimeraCarta(mazo))   }
function sacarLaPrimeraCartaDe_(mazo)  { return(aux_sacarLaPrimeraCarta(mazo))  }

function dameLaÚltimaCartaDe_(mazo)    { return(aux_dameLaÚltimaCarta(mazo))    }
function sacarLaÚltimaCartaDe_(mazo)   { return(aux_sacarLaÚltimaCarta(mazo))   }

function dameLaCartaMásGrandeDe_(mazo) { return(aux_dameLaCartaMásGrande(mazo)) }
function dameLaCartaMásChicaDe_(mazo)  { return(aux_dameLaCartaMásChica(mazo))  }

//---------------------------------------------------------------------------------------------------/
/*------------------ Operaciones de manipulación de un mazo español (interfaz) ----------------------/
/---------------------------------------------------------------------------------------------------*/
function  leerMazo()         { return (aux_leerMazo()) }
function  SacarMazo()        { AuxSacarMazo()          }
procedure MostrarMazo_(mazo) { AuxMostrarMazo(mazo)    }

/*==================================================================================================*/
/*--------------------------- FIN INTERFAZ de 04-MazosEspañoles-Base.gbs ---------------------------*/
/*==================================================================================================*/


/*==================================================================================================*/
/*---------------------------- AUXILIARES de 04-MazosEspañoles-Base.gbs ----------------------------*/
/*==================================================================================================*/

//---------------------------------------------------------------------------------------------------/
/*--------------- Operaciones a cambiar para pasar de 40 a 50 cartas (auxiliares) -------------------/
/---------------------------------------------------------------------------------------------------*/
// POR AHORA, NINGUNA (DEPENDE DE LOS MÓDULOS IMPORTADOS: Cartas y Valores)

//---------------------------------------------------------------------------------------------------/
/*------------------------ Auxiliares para construir mazos españoles --------------------------------/
/---------------------------------------------------------------------------------------------------*/
function aux_armarMazoVacío()                { return(Mazo(cartas<-[]            
                                                          ,tamaño<-0))                     }
function aux_agregarAlFinalDelMazo(m, c)     { return(Mazo(cartas<-cartas(m)++[c]
                                                          ,tamaño<-tamaño(m)+1))           }
function aux_agregarAlPrincipioDelMazo(m, c) { return(Mazo(cartas<-[c]++cartas(m)                                                     
                                                          ,tamaño<-tamaño(m)+1))           }
function aux_juntarMazos(m1,m2)              { return(Mazo(cartas<-cartas(m1)++cartas(m2)
                                                          ,tamaño<-tamaño(m1)+tamaño(m2))) }

function aux_mazoEspañolCompleto() {
    // La decisión de si es de 40 o de 50 cartas depende de los valores
    let (cs,n) := aux_armarRepresentaciónDeMazoEspañolCompleto()
    return(Mazo(cartas<-cs, tamaño<-n))
}

//---------------------------------------------------------------------------------------------------/
/*------------------------- Auxiliares para acceso a mazos españoles --------------------------------/
/---------------------------------------------------------------------------------------------------*/
function aux_quedanCartas(mazo) {
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(tamaño(mazo)>0)
}

function aux_cantidadDeCartasDelMazo(mazo) {
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(tamaño(mazo))
}

function aux_dameLaPrimeraCarta(mazo)   {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(primero(cartas(mazo)))
}

function aux_sacarLaPrimeraCarta(mazo)  {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(aux_sacarLaPrimeraCartaDeRepresentaciónDeMazoEspañol(mazo))
}

function aux_dameLaÚltimaCarta(mazo)   {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(último(cartas(mazo)))
}

function aux_sacarLaÚltimaCarta(mazo)  {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(aux_sacarLaÚltimaCartaDeRepresentaciónDeMazoEspañol(mazo))
}

function aux_dameLaCartaMásGrande(mazo)  {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(aux_dameLaMásGrandeDeRepresentaciónDeMazoEspañol(mazo))
}

function aux_dameLaCartaMásChica(mazo)  {
  // PRECONDICIÓN: quedan cartas en el mazo, y es válido
  //if (not aux_esUnMazoVálido(mazo)) { BOOM("No es un mazo válido. ¿Lo manipulaste por tu cuenta?") }
  return(aux_dameLaMásChicaDeRepresentaciónDeMazoEspañol(mazo))
}

//---------------------------------------------------------------------------------------------------/
/*--------------------------- Operaciones de E/S de mazos españoles ---------------------------------/
/---------------------------------------------------------------------------------------------------*/
function aux_leerMazo() {
   // PROPÓSITO: lee todas las cartas que están a continuación, a partir de la posición actual
   //            yendo al Este y luego al Sur
   cartasLeídas   := []
   cantidadLeídas := 0
   while (not aux_terminóElRecorridoGral(Este, Sur) && aux_hayCartaDestapada()) {
    cartasLeídas   := cartasLeídas ++ [ aux_leerCarta() ]
    cantidadLeídas := cantidadLeídas + 1
    AuxAvanzarRecorridoGral(Este, Sur)
   }
   if (aux_hayCartaDestapada()) { mazo := mazo ++ [ aux_leerCarta() ] }

   return(Mazo(cartas<-cartasLeídas, tamaño<-cantidadLeídas))
}

procedure AuxSacarMazo() {
   // PROPÓSITO: saca todas las cartas que están a continuación, a partir de la posición actual
   //            yendo al Este y luego al Sur
   while (not aux_terminóElRecorridoGral(Este, Sur) && aux_hayCartaDestapada()) {
    AuxSacarCartaActual()
    AuxAvanzarRecorridoGral(Este, Sur)
  }
  if (aux_hayCartaDestapada()) { AuxSacarCartaActual() }
}

procedure AuxMostrarMazo(mazo) {
   // PROPÓSITO: muestra la parte del mazo que pueda entre la celda actual y el borde del tablero, de a una carta por celda
   // PRECONDICIÓN: las celdas donde vayan a ir cartas deben estar vacías
   faltanMostrar := cartas(mazo)
   while (not aux_terminóElRecorridoGral(Este, Sur) && aux_quedanCartas(faltanMostrar)) {
     AuxPonerCartaEspañolaDestapada(primero(faltanMostrar))
     AuxAvanzarRecorridoGral(Este, Sur)
     faltanMostrar := resto(faltanMostrar)
   }
   if (aux_quedanCartas(faltanMostrar)) { AuxPonerCartaEspañolaDestapada(primero(faltanMostrar)) }
}

//---------------------------------------------------------------------------------------------------/
/*--------------------------- Operaciones auxiliares de codificación --------------------------------/
/---------------------------------------------------------------------------------------------------*/
function aux_esUnMazoVálido(mazo) { return(aux_calcularLongitud(cartas(mazo))==tamaño(mazo)) }

function aux_sacarLaPrimeraCartaDeRepresentaciónDeMazoEspañol(mazo) {
  return(Mazo(cartas<-resto(cartas(mazo))
             ,tamaño<-tamaño(mazo)-1))
}

function aux_sacarLaÚltimaCartaDeRepresentaciónDeMazoEspañol(mazo) {
  return(Mazo(cartas<-comienzo(cartas(mazo))
             ,tamaño<-tamaño(mazo)-1))
}

function aux_dameLaMásGrandeDeRepresentaciónDeMazoEspañol(mazo) {
  // PRECONDICIÓN: el mazo no está vacío
  // RECORRIDO SOBRE LAS CARTAS DEL MAZO
  cartasARecorrer := cartas(mazo)
  másGrandeActual := primero(cartasARecorrer)          // INICIO CON LA PRIMER CARTA
  cartasARecorrer := resto(cartasARecorrer)
  while (not esVacía(cartasARecorrer)) {               // NO SE ACABARON LAS CARTAS?
                                                       // PROCESAR LA PRÓXIMA CARTA
    if (aux_esMayorCartaEspañola(primero(cartasARecorrer), másGrandeActual))
      { másGrandeActual := primero(cartasARecorrer) }
                                                       // PASAR A LA SIGUENTE CARTA
    cartasARecorrer := resto(cartasARecorrer)
  }
  return(másGrandeActual)
}

function aux_dameLaMásChicaDeRepresentaciónDeMazoEspañol(mazo) {
  // PRECONDICIÓN: el mazo no está vacío
  // RECORRIDO SOBRE LAS CARTAS DEL MAZO
  cartasARecorrer := cartas(mazo)
  másChicaActual  := primero(cartasARecorrer)          // INICIO CON LA PRIMER CARTA
  cartasARecorrer := resto(cartasARecorrer)
  while (not esVacía(cartasARecorrer)) {               // NO SE ACABARON LAS CARTAS?
                                                       // PROCESAR LA PRÓXIMA CARTA
    if (aux_esMenorCartaEspañola(primero(cartasARecorrer), másChicaActual))
      { másChicaActual := primero(cartasARecorrer) }
                                                       // PASAR A LA SIGUENTE CARTA
    cartasARecorrer := resto(cartasARecorrer)
  }
  return(másChicaActual)
}

function aux_armarRepresentaciónDeMazoEspañolCompleto() {
  // RECORRIDO SOBRE LOS PALOS
  paloActual      := aux_minPaloDeCartaEspañola()          // INICIAR EN EL PRIMER PALO
  cartasARetornar := []
  lenARetornar    := 0
  while(not (paloActual==aux_maxPaloDeCartaEspañola)) {    // NO ES EL ÚLTIMO PALO
                                                           // PROCESAR EL PALO ACTUAL
    let (cartasDelPalo, lenDelPalo) := aux_armarRepresentaciónDeCartasDeMazoEspañolCompletoDe(paloActual)
    cartasARetornar := cartasARetornar ++ cartasDelPalo
    lenARetornar    := lenARetornar    +  lenDelPalo
                                                          // PASAR AL SIGUIENTE PALO
    paloActual      := aux_paloDeCartaEspañolaSiguiente(paloActual)
  }
                                                          // PROCESAR EL ÚLTIMO PALO POR SEPARADO
  let (cartasDelPalo, lenDelPalo) := aux_armarRepresentaciónDeCartasDeMazoEspañolCompletoDe(paloActual)
  cartasARetornar := cartasARetornar ++ cartasDelPalo
  lenARetornar    := lenARetornar    +  lenDelPalo

  return (cartasARetornar, lenARetornar)
}

function aux_armarRepresentaciónDeCartasDeMazoEspañolCompletoDe(palo) {
  // RECORRIDO SOBRE LOS VALORES DEL PALO DADO
  valorActual     := aux_minValorDeCartaEspañola()         // INICIAR EN EL PRIMER VALOR
  cartasARetornar := []
  lenARetornar    := 0
  while(not (valorActual==aux_maxValorDeCartaEspañola)) {  // NO ES EL ÚLTIMO VALOR
                                                           // PROCESAR EL VALOR ACTUAL
    cartasARetornar := cartasARetornar ++ [aux_armarCartaEspañola(valorActual, palo)]
    lenARetornar    := lenARetornar    +  1
                                                          // PASAR AL SIGUIENTE VALOR
    valorActual     := aux_valorDeCartaEspañolaSiguiente(valorActual)
  }
                                                          // PROCESAR EL ÚLTIMO VALOR POR SEPARADO
  cartasARetornar := cartasARetornar ++ [aux_armarCartaEspañola(valorActual, palo)]
  lenARetorna  r  := lenARetornar    +  1 

  return (cartasARetornar, lenARetornar)
}

/*==================================================================================================*/
/*------------------------- FIN AUXILIARES de 04-MazosEspañoles-Base.gbs ---------------------------*/
/*==================================================================================================*/

